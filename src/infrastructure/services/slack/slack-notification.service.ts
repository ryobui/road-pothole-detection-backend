import { Injectable } from '@nestjs/common';
import { SlackMessageOptions, SlackService } from 'nestjs-slack';

@Injectable()
export class SlackNotificationService {
    private readonly CHANNEL_BUG = 'developer'; // T√™n k√™nh Slack m√† b·∫°n mu·ªën g·ª≠i th√¥ng b√°o

    constructor(private readonly slackService: SlackService) {}

    /**
     * G·ª≠i th√¥ng b√°o l·ªói t·ªõi Slack
     * @param message - N·ªôi dung th√¥ng b√°o l·ªói
     * @param stack - Stack trace c·ªßa l·ªói (tu·ª≥ ch·ªçn)
     */
    async sendErrorNotification(message: string): Promise<void> {
        try {
            const slackMessage: SlackMessageOptions = {
                channel: this.CHANNEL_BUG,
                text: `üö® *Th√¥ng b√°o l·ªói trong ·ª©ng d·ª•ng* üö®\n*Chi ti·∫øt:* ${message}`,
                username: 'BigBugs',
                unfurl_links: true,
                mrkdwn: true,
                icon_emoji: ':beetle:',
            };

            await this.slackService.postMessage(slackMessage);
            console.log('ƒê√£ g·ª≠i th√¥ng b√°o l·ªói ƒë·∫øn Slack');
        } catch (error) {
            console.error('Kh√¥ng th·ªÉ g·ª≠i th√¥ng b√°o ƒë·∫øn Slack:', error);
        }
    }
}
